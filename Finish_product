import os
import csv

mentor_file = "/Users/spencerfreeman/Desktop/Jens_project/Real_data_structure/Mentors.csv"
mentee_file = "/Users/spencerfreeman/Desktop/Jens_project/Real_data_structure/Mentees.csv"
holding_file_final = "/Users/spencerfreeman/Desktop/Jens_project/Real_data_structure/holding_file_final.csv"

mentor_dict = {}
with open(mentor_file, 'r') as fh_mentor:
    reader_object_mentor = csv.reader(fh_mentor)
    for line in reader_object_mentor:
        if line[0] == 'ID':
            continue
        else:
            mentor_id = str(line[0])
            goal_list_mentor = line[10].split(';')
            mentor_dict[mentor_id] = goal_list_mentor

mentee_dict = {}
with open(mentee_file, 'r') as fh_mentee:
    reader_object_mentee = csv.reader(fh_mentee)
    for line in reader_object_mentee:
        if line[0] == 'ID':
            continue
        else:
            mentee_id = str(line[0])
            goal_list_mentee = line[10].split(';')
            mentee_dict[mentee_id] = goal_list_mentee

pairing_scores = {}
for mentee_id, mentee_goals in mentee_dict.items():
    for mentor_id, mentor_goals in mentor_dict.items():
        score = sum(1 for goal in mentee_goals if goal in mentor_goals)
        real_score=int(score)/int(len(mentee_goals))
        percent_score = 100*real_score
        pairing_scores[(mentee_id, mentor_id)] = percent_score

sorted_pairings = sorted(pairing_scores.items(), key=lambda x: x[1], reverse=True)

#with open(holding_file, 'w') as f:
 #   writer = csv.writer(f)
   # for pairing, score in sorted_pairings:
  #      writer.writerow(list(pairing) + [score])
        #writer.writerow([score] + list(pairing))

#print(sorted_pairings)

from six_competencies_draft import pairing_scores_competencies

#print(sorted_pairings_competencies)

combined_scores_dict = {}
for pairing_IDs, pairing_scores in pairing_scores.items():
    for competencies_IDs, competencies_scores in pairing_scores_competencies.items():
        if pairing_IDs == competencies_IDs:
            combined_scores_dict[pairing_IDs] = (pairing_scores,competencies_scores)
        else:
            continue

#print(combined_scores_dict)
#print(len(combined_scores_dict))
        
#combine scores so that competencies score (v[1]) is worth 60% and pairing score (v[0]) is worth 40%

final_scores_dict = {}
for k,v in combined_scores_dict.items():
    new_v = ((0.4*float(v[0]))+(0.6*float(v[1])))
    final_scores_dict[k]=(v[0],v[1],new_v)

#print(final_scores_dict)
#print(len(final_scores_dict))
#print(len(mentor_dict))
#print(len(mentee_dict))

from demo_draft import demo_match

full_dict = {}
for pairing_IDs, pairing_scores in final_scores_dict.items():
    for demo_IDs, demos in demo_match.items():
        if pairing_IDs == demo_IDs:
            full_list = list(pairing_scores)
            full_list.append(demos)
            full_dict[pairing_IDs] = full_list
        else:
            continue

print(full_dict)
print(len(full_dict))

with open(holding_file_final, 'w') as f:
    writer = csv.writer(f)
    for pairing, scores in full_dict.items():
        writer.writerow(list(pairing) + list(scores))
